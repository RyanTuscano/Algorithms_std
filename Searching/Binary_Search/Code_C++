#include <iostream>
#include <algorithm> // For std::sort
using namespace std;

// Function to perform binary search
int binarySearch(const int arr[], int size, int target) {
    int left = 0;
    int right = size - 1;
    
    while (left <= right) {
        int mid = left + (right - left) / 2;
        
        // Check if the target is present at mid
        if (arr[mid] == target) {
            return mid;
        }
        
        // If target is greater, ignore the left half
        if (arr[mid] < target) {
            left = mid + 1;
        }
        // If target is smaller, ignore the right half
        else {
            right = mid - 1;
        }
    }
    
    // Target is not present in the array
    return -1;
}

int main() {
    // Example array (must be sorted for binary search)
    int myArray[] = {2, 3, 5, 6, 8};
    int size = sizeof(myArray) / sizeof(myArray[0]); // Calculate the size of the array
    int target = 6; // Element to search for

    // Perform binary search
    int result = binarySearch(myArray, size, target);

    // Check and output the result
    if (result != -1) {
        cout << "Element found at index " << result << endl;
    } else {
        cout << "Element not found" << endl;
    }

    return 0;
}
